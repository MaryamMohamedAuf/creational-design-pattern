public interface Iproduct{
void DoSomething();
}
public class Product: Iproduct{
public void DoSomething()
    {
        Console.WriteLine("Doing something in ConcreteProduct");
    }
}

public abstract class Creator
{
    public abstract IProduct CreateProduct();

    public void UseProduct()
    {
        IProduct product = CreateProduct();
        product.DoSomething();
    }
}

// Concrete creator implementation
public class ConcreteCreator: Creator
{
    public override IProduct CreateProduct()
    {
        return new ConcreteProduct();
    }
}

// Client code
public class Client
{
    public void Main()
    {
        Creator creator = new ConcreteCreator();
        creator.UseProduct();
    }
}
